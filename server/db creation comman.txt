
SQL*Plus: Release 10.2.0.1.0 - Production on Thu Feb 17 18:35:29 2022

Copyright (c) 1982, 2005, Oracle.  All rights reserved.

SQL> CONN
Enter user-name: AHMAD
Enter password:
Connected.
SQL> SELECT * FROM TAB;

TNAME                          TABTYPE  CLUSTERID
------------------------------ ------- ----------
STD                            TABLE
STDMARKS                       TABLE
STDMAIN                        TABLE
SMARKS                         TABLE

SQL> CREATE TABLE USERS(USERID VARCHAR2(10),PASS VARCHAR2(10),FNAME VARCHAR2(15),NEXTEXTID NUMBER(10));

Table created.

SQL> DESC USERS
 Name                                      Null?    Type
 ----------------------------------------- -------- ----------------------------
 USERID                                             VARCHAR2(10)
 PASS                                               VARCHAR2(10)
 FNAME                                              VARCHAR2(15)
 NEXTEXTID                                          NUMBER(10)

SQL> INSERT INTO USERS('maishtiyaque','AshokAkeneni12','Md Ishtiyaque',1);
INSERT INTO USERS('maishtiyaque','AshokAkeneni12','Md Ishtiyaque',1)
                  *
ERROR at line 1:
ORA-00928: missing SELECT keyword


SQL> INSERT INTO USERS VALUES('maishtiyaque','AshokAkeneni12','Md Ishtiyaque',1);
INSERT INTO USERS VALUES('maishtiyaque','AshokAkeneni12','Md Ishtiyaque',1)
                         *
ERROR at line 1:
ORA-12899: value too large for column "AHMAD"."USERS"."USERID" (actual: 12,
maximum: 10)


SQL> INSERT INTO USERS VALUES('maishti','AshokAkeneni12','Md Ishtiyaque',1);
INSERT INTO USERS VALUES('maishti','AshokAkeneni12','Md Ishtiyaque',1)
                                   *
ERROR at line 1:
ORA-12899: value too large for column "AHMAD"."USERS"."PASS" (actual: 14,
maximum: 10)


SQL> INSERT INTO USERS VALUES('maishti','Ashok12','Md Ishtiyaque',1);

1 row created.

SQL> select * fromm users;
select * fromm users
         *
ERROR at line 1:
ORA-00923: FROM keyword not found where expected


SQL> select * from users;

USERID     PASS       FNAME            NEXTEXTID
---------- ---------- --------------- ----------
maishti    Ashok12    Md Ishtiyaque            1

SQL> CREATE TABLE USERS(USERID VARCHAR2(10),PASS VARCHAR2(10),FNAME VARCHAR2(15),NEXTEXTID NUMBER(10));
CREATE TABLE USERS(USERID VARCHAR2(10),PASS VARCHAR2(10),FNAME VARCHAR2(15),NEXTEXTID NUMBER(10))
             *
ERROR at line 1:
ORA-00955: name is already used by an existing object


SQL> alter table users add constraint userid primary key;
alter table users add constraint userid primary key
                                                  *
ERROR at line 1:
ORA-00906: missing left parenthesis


SQL> alter table users add constraint userid (primary key);
alter table users add constraint userid (primary key)
                                        *
ERROR at line 1:
ORA-00904: : invalid identifier


SQL> alter table users add constraint userid primary key(userid);

Table altered.

SQL> CREATE TABLE USERS(USERID VARCHAR2(10) foreign key,texid number(10),FNAME VARCHAR2(200));
CREATE TABLE USERS(USERID VARCHAR2(10) foreign key,texid number(10),FNAME VARCHAR2(200))
                                       *
ERROR at line 1:
ORA-00907: missing right parenthesis


SQL> CREATE TABLE USERS(USERID VARCHAR2(10) foreign key(userid) references users(userid),texid number(10),FNAME VARCHAR2(200));
CREATE TABLE USERS(USERID VARCHAR2(10) foreign key(userid) references users(userid),texid number(10),FNAME VARCHAR2(200))
                                       *
ERROR at line 1:
ORA-00907: missing right parenthesis


SQL> CREATE TABLE USERS(USERID VARCHAR2(10), foreign key(userid) references users(userid),texid number(10),FNAME VARCHAR2(200));
CREATE TABLE USERS(USERID VARCHAR2(10), foreign key(userid) references users(userid),texid number(10),FNAME VARCHAR2(200))
             *
ERROR at line 1:
ORA-00955: name is already used by an existing object


SQL> CREATE TABLE userdata(USERID VARCHAR2(10), foreign key(userid) references users(userid),texid number(10),FNAME VARCHAR2(200));

Table created.

SQL> CREATE TABLE tokens(USERID VARCHAR2(10), foreign key(userid) references users(userid),token varchar2(20));

Table created.

SQL> desc userdata;
 Name                                      Null?    Type
 ----------------------------------------- -------- ----------------------------
 USERID                                             VARCHAR2(10)
 TEXID                                              NUMBER(10)
 FNAME                                              VARCHAR2(200)

SQL> alter table userdata rename column fname to text
  2  ;

Table altered.

SQL> desc userdata;
 Name                                      Null?    Type
 ----------------------------------------- -------- ----------------------------
 USERID                                             VARCHAR2(10)
 TEXID                                              NUMBER(10)
 TEXT                                               VARCHAR2(200)

SQL> desc tokens;
 Name                                      Null?    Type
 ----------------------------------------- -------- ----------------------------
 USERID                                             VARCHAR2(10)
 TOKEN                                              VARCHAR2(20)

SQL> desc users;
 Name                                      Null?    Type
 ----------------------------------------- -------- ----------------------------
 USERID                                    NOT NULL VARCHAR2(10)
 PASS                                               VARCHAR2(10)
 FNAME                                              VARCHAR2(15)
 NEXTEXTID                                          NUMBER(10)

SQL>




//command in posgres sql

CREATE TABLE public.users
(
    userid character varying(15)[],
    pass character varying(15)[] NOT NULL,
    fname text NOT NULL,
    lname text,
    nextid numeric(10) DEFAULT 1,
    PRIMARY KEY (userid)
);

ALTER TABLE IF EXISTS public.users
    OWNER to postgres;


CREATE TABLE public.tokens
(
    userid character varying(15)[],
    token text NOT NULL,
    CONSTRAINT ref_from_users FOREIGN KEY (userid)
        REFERENCES public.users (userid) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION
        NOT VALID
);

ALTER TABLE IF EXISTS public.tokens
    OWNER to postgres;



CREATE TABLE public.userdata
(
    userid character varying(15)[] NOT NULL,
    textid numeric(10) NOT NULL DEFAULT 1,
    rtext text NOT NULL,
    CONSTRAINT ref_from_users FOREIGN KEY (userid)
        REFERENCES public.users (userid) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION
        NOT VALID
);

ALTER TABLE IF EXISTS public.userdata
    OWNER to postgres;





// db create_all 
// models have all tables,
from models import *
db.create_all()

// list tables
db.metadata.tables.keys()

// insert a element using db session
user = Users(userid='s', passw='s', fname='Owais',lname='Ansari')
db.session.add(user)
db.session.commit()

// insert a element using new session
from sqlalchemy.orm import Session
from sqlalchemy import create_engine
user = Users(userid='s', passw='s', fname='Owais',lname='Ansari')
// must imported first from models import *
engine = create_engine(app.config['SQLALCHEMY_DATABASE_URI'], future=True)
session = Session(engine)
session.add(user)
session.commit()

heroko flask port runnig 58043
https://flask-sr.herokuapp.com/












